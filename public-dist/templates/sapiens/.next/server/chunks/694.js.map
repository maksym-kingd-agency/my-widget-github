{"version":3,"file":"694.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAEgD;AACF;AAIX;AAE5B,MAAMA,OAAsB,CAACI,QAAU;IAC5C,MAAM,EAAEC,EAAC,EAAEC,SAAQ,EAAEC,KAAI,EAAE,GAAGC,MAAM,GAAGJ;IACvC,MAAM,EAAEC,GAAGI,UAAS,EAAE,GAAGP,yCAAcA;IAEvC,qBACE,iBAACD,cAAOA;QACNM,MAAMA;QACL,GAAGC,IAAI;QACRE,WACEH,OACIJ,uBAAQA,GACR,MAAM,iFAAiF,GAAlF;kBAGVE,IAAII,UAAUJ,KAAKC,QAAQ;;AAGlC,EAAE;AAEF,gDAAeN,IAAIA,EAAC;;;AC5Ba;AACV;AACC;;;;;;;;;;;;;;;;;;ACDK;AAWtB,MAAMa,oBAAoB,CAACC,SAA6D;IAC7F,MAAM,EAAEC,eAAc,EAAEC,SAAQ,EAAE,GAAGF;IAErC,MAAMG,oBAAoBF,eAAeG,IAAI,CAAC,CAACC,YAAcA,UAAUC,WAAW,KAAKJ;IAEvF,MAAMK,QAAQT,aAAGA,CAACK,mBAAmB,YAAY,EAAE;IAEnD,OAAOI;AACT,EAAE;;;ACpBkC;;;;;;;;;;;ACA7B,MAAMC,wBAAwB,CAACC,OAAiB;IACrD,MAAMC,gBAAgBD,KAAKE,UAAU,CAAC;IAEtC,IAAIC,WAAW;IACf,MAAMC,eAAeJ,SAAS,SAAS,KAAKA,IAAI;IAEhD,IAAIA,SAAS,QAAQ;QACnBG,WAAW;IACb,OAAO;QACLA,WAAWF,gBAAgBD,OAAO,CAAC,CAAC,EAAEA,KAAK,CAAC;IAC9C,CAAC;IAED,OAAO;QACLG;QACAC;QACAC,gBAAgB,CAACJ;IACnB;AACF,EAAE","sources":["webpack:///./src/components/links/Link/Link.tsx","webpack:///./src/components/links/Link/index.ts","webpack:///./src/helpers/getNavigatorItems/getNavigatorItems.ts","webpack:///./src/helpers/getNavigatorItems/index.ts","webpack:///./src/helpers/getNavigatorPathnames/getNavigatorPathnames.ts"],"sourcesContent":["import { FC } from 'react';\n\nimport { Link as MuiLink } from '@mui/material';\nimport { useTranslation } from 'next-i18next';\n\nimport { LinkProps } from './types';\n\nimport NextLink from '../NextLink';\n\nexport const Link: FC<LinkProps> = (props) => {\n  const { t, children, href, ...rest } = props;\n  const { t: translate } = useTranslation();\n\n  return (\n    <MuiLink\n      href={href}\n      {...rest}\n      component={\n        href\n          ? NextLink\n          : 'div' /* To not use link if href was not passed (NextLink does not expect 'undefined') */\n      }\n    >\n      {t ? translate(t) : children}\n    </MuiLink>\n  );\n};\n\nexport default Link;\n","export { default } from './Link';\nexport * from './Link';\nexport * from './types';\n","import { zodNavigatorSchemas } from '@packages/providers';\nimport get from 'lodash/get';\n\nexport type GetNavigatorItemsParams = {\n  navigatorsData: typeof zodNavigatorSchemas.index._output;\n  selector: 'header' | 'footer';\n};\n\nexport type GetNavigatorItemsReturn = NonNullable<\n  GetNavigatorItemsParams['navigatorsData'][number]['items']\n>;\n\nexport const getNavigatorItems = (params: GetNavigatorItemsParams): GetNavigatorItemsReturn => {\n  const { navigatorsData, selector } = params;\n\n  const selectedNavigator = navigatorsData.find((navigator) => navigator.placeholder === selector);\n\n  const items = get(selectedNavigator, 'items') || [];\n\n  return items;\n};\n","export * from './getNavigatorItems';\n","export const getNavigatorPathnames = (path: string) => {\n  const isUrlWithHttp = path.startsWith('http');\n\n  let pathname = '';\n  const prefetchPath = path === 'home' ? '' : path;\n\n  if (path === 'home') {\n    pathname = '/';\n  } else {\n    pathname = isUrlWithHttp ? path : `/${path}`;\n  }\n\n  return {\n    pathname,\n    prefetchPath,\n    isPrefetchPath: !isUrlWithHttp,\n  };\n};\n"],"names":["Link","MuiLink","useTranslation","NextLink","props","t","children","href","rest","translate","component","default","get","getNavigatorItems","params","navigatorsData","selector","selectedNavigator","find","navigator","placeholder","items","getNavigatorPathnames","path","isUrlWithHttp","startsWith","pathname","prefetchPath","isPrefetchPath"],"sourceRoot":""}