{"version":3,"file":"688.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAG8D;AACiB;AACX;AACQ;AAc5E,MAAMI,cAAc,CAACC,QAA2B;IAC9C,IAAI,OAAOA,UAAU,UAAU,OAAO;IACtC,OAAOA,MAAMC,OAAO,CAAC,WAAW;AAClC;AAEA,MAAMC,QAAQ,CAACF,QAA2B;IACxC,+FAA+F,GAC/F,MAAMG,kBAAkBJ,YAAYC;IACpC,OAAOG,kBAAkB,CAAC,CAAC,EAAEA,gBAAgB,CAAC,GAAG,EAAE;AACrD;AAEA,MAAMC,SAAS,CAACJ,QAA2B,CAAC,CAAC,EAAED,YAAYC,OAAO,CAAC;AAE5D,MAAMK,aAAkC,CAACC,QAAU;IACxD,MAAM,EACJC,OAAQ,KAAK,GACbC,WAAU,EACVC,KAAI,EACJC,GAAE,EACFC,MAAK,EACLC,SAAQ,EACRC,gBAAe,EACfC,iBAAkB,CAAC,EAAC,EACpBC,UAAUC,kBAAiB,EAC3B,GAAGC,MACJ,GAAGX;IAEJ,MAAM,EAAEY,GAAE,EAAEH,UAAUI,4BAA2B,EAAE,GAAGC,qBAAqB,GAAGN;IAE9E,MAAMO,uBAAuB;QAAEZ;QAAMa,cAAc;QAAI,GAAGT,eAAe;IAAC;IAE1E,MAAM,EACJU,OAAO,EAAEvB,MAAK,EAAEwB,SAAQ,EAAEC,IAAG,EAAE,GAChC,GAAG5B,8DAAaA,CAACwB;IAElB,MAAMK,kBAAkB/B,qFAAkBA,CAAC0B;IAC3C,MAAMM,aAAaD,mBAAmBP,+BAA+BH;IAErE,MAAMY,eAAgD,CAAC5B,QAAU;QAC/DwB,SAAStB,MAAMF;IACjB;IAEA,qBACE,mDAACF,2EAAaA;QACZY,IAAIA,MAAMD;QACVE,OAAOA;QACPJ,OAAOA;QACPC,YAAYA;QACZO,UAAUY;QACT,GAAGV,IAAI;kBAEP,CAACY,aAAe;YACf,qBACE,mDAACjC,iEAAcA;gBACbc,IAAImB,WAAWnB,EAAE;gBACjBV,OAAOI,OAAOJ;gBACdwB,UAAUI;gBACVC,YAAY;oBAAEpB;gBAAK;gBACnBqB,KAAI;gBACJC,YAAY,KAAK;gBACjBnB,UAAUA;gBACVoB,SAAQ;gBACRC,gBAAe;gBACf1B,OAAOsB,WAAWtB,KAAK;gBACvBQ,UAAUY;gBACVO,YAAY;oBACVT;gBACF;gBACAU,gBAAgB;gBAChBjB,IAAI;oBACF,oCACE;wBACE;;;mBAGC,GACDkB,QAAQ;oBACV;oBACF,6CAA6C;oBAC7C,wBAAwB;wBACtBC,IAAI;oBACN;oBACA,GAAGnB,EAAE;gBACP;gBACC,GAAGE,mBAAmB;;QAG7B;;AAGN,EAAE;AAEF,iEAAef,UAAUA,EAAC","sources":["webpack:///./src/components/inputs/PhoneInput/PhoneInput.tsx"],"sourcesContent":["import { FC } from 'react';\n\nimport { StyledRootProps } from '@packages/types';\nimport { useIsRequiredInput } from 'hooks/useIsRequiredInput';\nimport MuiPhoneNumber, { MuiPhoneNumberProps } from 'material-ui-phone-number';\nimport { useController, UseControllerProps } from 'react-hook-form';\nimport { InputTemplate, InputTemplateProps } from 'templates/InputTemplate';\n\nexport interface PhoneInputProps\n  extends Partial<InputTemplateProps>,\n    Pick<UseControllerProps, 'name'>,\n    StyledRootProps {\n  disabled?: boolean;\n  required?: boolean;\n  phoneInputProps?: Partial<MuiPhoneNumberProps>;\n  controllerProps?: Partial<UseControllerProps>;\n  defaultCountry?: CountryType;\n  preferredCountries?: CountryType[];\n}\n\nconst onlyNumbers = (value: unknown): string => {\n  if (typeof value !== 'string') return '';\n  return value.replace(/[^0-9]/g, '');\n};\n\nconst parse = (value: unknown): string => {\n  /* Input has '+' as empty value. Change it to empty string for connect 'isRequired' validation */\n  const normalizedValue = onlyNumbers(value);\n  return normalizedValue ? `+${normalizedValue}` : '';\n};\n\nconst format = (value: unknown): string => `+${onlyNumbers(value)}`;\n\nexport const PhoneInput: FC<PhoneInputProps> = (props) => {\n  const {\n    error = false,\n    helperText,\n    name,\n    id,\n    label,\n    disabled,\n    controllerProps,\n    phoneInputProps = {},\n    required: requiredFromProps,\n    ...rest\n  } = props;\n\n  const { sx, required: requiredFromPhoneInputProps, ...restPhoneInputProps } = phoneInputProps;\n\n  const finalControllerProps = { name, defaultValue: '', ...controllerProps };\n\n  const {\n    field: { value, onChange, ref },\n  } = useController(finalControllerProps);\n\n  const isInputRequired = useIsRequiredInput(finalControllerProps);\n  const isRequired = isInputRequired || requiredFromPhoneInputProps || requiredFromProps;\n\n  const handleChange: MuiPhoneNumberProps['onChange'] = (value) => {\n    onChange(parse(value));\n  };\n\n  return (\n    <InputTemplate\n      id={id || name}\n      label={label}\n      error={error}\n      helperText={helperText}\n      required={isRequired}\n      {...rest}\n    >\n      {(inputProps) => {\n        return (\n          <MuiPhoneNumber\n            id={inputProps.id}\n            value={format(value)}\n            onChange={handleChange}\n            inputProps={{ name }}\n            dir=\"ltr\"\n            autoFormat={false}\n            disabled={disabled}\n            variant=\"outlined\"\n            defaultCountry=\"us\"\n            error={inputProps.error}\n            required={isRequired}\n            InputProps={{\n              ref,\n            }}\n            disableAreaCodes\n            sx={{\n              '& .MuiPhoneNumber-flagButton svg' /* We use \"flagButton\" to not affect other adornments */:\n                {\n                  /**\n                   * Fix for Safari and mobile browsers,\n                   * flag is not visible: https://github.com/alexplumb/material-ui-phone-number/issues/111\n                   */\n                  height: 20,\n                },\n              // need to have padding left in rtl direction\n              '& .MuiInputBase-root': {\n                pl: '16px /* @noflip */',\n              },\n              ...sx,\n            }}\n            {...restPhoneInputProps}\n          />\n        );\n      }}\n    </InputTemplate>\n  );\n};\n\nexport default PhoneInput;\n\nexport type CountryType =\n  | 'af'\n  | 'al'\n  | 'dz'\n  | 'as'\n  | 'ad'\n  | 'ao'\n  | 'ai'\n  | 'ag'\n  | 'ar'\n  | 'am'\n  | 'aw'\n  | 'au'\n  | 'at'\n  | 'az'\n  | 'bs'\n  | 'bh'\n  | 'bd'\n  | 'bb'\n  | 'by'\n  | 'be'\n  | 'bz'\n  | 'bj'\n  | 'bm'\n  | 'bt'\n  | 'bo'\n  | 'ba'\n  | 'bw'\n  | 'br'\n  | 'io'\n  | 'vg'\n  | 'bn'\n  | 'bg'\n  | 'bf'\n  | 'bi'\n  | 'kh'\n  | 'cm'\n  | 'ca'\n  | 'cv'\n  | 'bq'\n  | 'ky'\n  | 'cf'\n  | 'td'\n  | 'cl'\n  | 'cn'\n  | 'co'\n  | 'km'\n  | 'cd'\n  | 'cg'\n  | 'ck'\n  | 'cr'\n  | 'ci'\n  | 'hr'\n  | 'cu'\n  | 'cw'\n  | 'cy'\n  | 'cz'\n  | 'dk'\n  | 'dj'\n  | 'dm'\n  | 'do'\n  | 'ec'\n  | 'eg'\n  | 'sv'\n  | 'gq'\n  | 'er'\n  | 'ee'\n  | 'et'\n  | 'fk'\n  | 'fo'\n  | 'fj'\n  | 'fi'\n  | 'fr'\n  | 'gf'\n  | 'pf'\n  | 'ga'\n  | 'gm'\n  | 'ge'\n  | 'de'\n  | 'gh'\n  | 'gi'\n  | 'gr'\n  | 'gl'\n  | 'gd'\n  | 'gp'\n  | 'gu'\n  | 'gt'\n  | 'gn'\n  | 'gw'\n  | 'gy'\n  | 'ht'\n  | 'hn'\n  | 'hk'\n  | 'hu'\n  | 'is'\n  | 'in'\n  | 'id'\n  | 'ir'\n  | 'iq'\n  | 'ie'\n  | 'il'\n  | 'it'\n  | 'jm'\n  | 'jp'\n  | 'jo'\n  | 'kz'\n  | 'ke'\n  | 'ki'\n  | 'kw'\n  | 'kg'\n  | 'la'\n  | 'lv'\n  | 'lb'\n  | 'ls'\n  | 'lr'\n  | 'ly'\n  | 'li'\n  | 'lt'\n  | 'lu'\n  | 'mo'\n  | 'mk'\n  | 'mg'\n  | 'mw'\n  | 'my'\n  | 'mv'\n  | 'ml'\n  | 'mt'\n  | 'mh'\n  | 'mq'\n  | 'mr'\n  | 'mu'\n  | 'mx'\n  | 'fm'\n  | 'md'\n  | 'mc'\n  | 'mn'\n  | 'me'\n  | 'ms'\n  | 'ma'\n  | 'mz'\n  | 'mm'\n  | 'na'\n  | 'nr'\n  | 'np'\n  | 'nl'\n  | 'nc'\n  | 'nz'\n  | 'ni'\n  | 'ne'\n  | 'ng'\n  | 'nu'\n  | 'nf'\n  | 'kp'\n  | 'mp'\n  | 'no'\n  | 'om'\n  | 'pk'\n  | 'pw'\n  | 'ps'\n  | 'pa'\n  | 'pg'\n  | 'py'\n  | 'pe'\n  | 'ph'\n  | 'pl'\n  | 'pt'\n  | 'pr'\n  | 'qa'\n  | 're'\n  | 'ro'\n  | 'ru'\n  | 'rw'\n  | 'bl'\n  | 'sh'\n  | 'kn'\n  | 'lc'\n  | 'mf'\n  | 'pm'\n  | 'vc'\n  | 'ws'\n  | 'sm'\n  | 'st'\n  | 'sa'\n  | 'sn'\n  | 'rs'\n  | 'sc'\n  | 'sl'\n  | 'sg'\n  | 'sx'\n  | 'sk'\n  | 'si'\n  | 'sb'\n  | 'so'\n  | 'za'\n  | 'kr'\n  | 'ss'\n  | 'es'\n  | 'lk'\n  | 'sd'\n  | 'sr'\n  | 'sz'\n  | 'se'\n  | 'ch'\n  | 'sy'\n  | 'tw'\n  | 'tj'\n  | 'tz'\n  | 'th'\n  | 'tl'\n  | 'tg'\n  | 'tk'\n  | 'to'\n  | 'tt'\n  | 'tn'\n  | 'tr'\n  | 'tm'\n  | 'tc'\n  | 'tv'\n  | 'vi'\n  | 'ug'\n  | 'ua'\n  | 'ae'\n  | 'gb'\n  | 'us'\n  | 'uy'\n  | 'uz'\n  | 'vu'\n  | 'va'\n  | 've'\n  | 'vn'\n  | 'wf'\n  | 'ye'\n  | 'zm'\n  | 'zw';\n"],"names":["useIsRequiredInput","MuiPhoneNumber","useController","InputTemplate","onlyNumbers","value","replace","parse","normalizedValue","format","PhoneInput","props","error","helperText","name","id","label","disabled","controllerProps","phoneInputProps","required","requiredFromProps","rest","sx","requiredFromPhoneInputProps","restPhoneInputProps","finalControllerProps","defaultValue","field","onChange","ref","isInputRequired","isRequired","handleChange","inputProps","dir","autoFormat","variant","defaultCountry","InputProps","disableAreaCodes","height","pl"],"sourceRoot":""}