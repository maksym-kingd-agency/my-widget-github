{"version":3,"file":"797.js","mappings":";;;;;;;;;;;;;;;;;;;;;;AAEuD;AACJ;AAI5C,MAAMG,SAA0B,CAACC,QAAU;IAChD,MAAM,EAAEC,GAAE,EAAEC,QAAO,EAAEC,MAAO,GAAE,EAAE,GAAGH;IAEnC,qBACE,sBAACH,cAAIA;QAACO,SAAS;QAACC,eAAc;QAASC,YAAW;QAASC,gBAAe;QAASN,IAAIA;;YACpFC,yBACC,iBAACJ,4BAAUA;gBAACU,SAAQ;gBAAYC,WAAU;gBAASC,IAAI;0BACpDR;;0BAGL,iBAACN,0BAAgBA;gBAACO,MAAMA;;;;AAG9B,EAAE;;;ACpBuB;;;;;;;;;;;;;;;;;;;;;;ACAU;AAEa;AAIzC,MAAMS,yBAAWD,8BAAUA,CAAgC,CAACX,OAAOa,MAAQ;IAChF,qBAAO,iBAAChB,cAAIA;QAACgB,KAAKA;QAAKC,IAAI;QAACC,IAAI;QAAK,GAAGf,KAAK;;AAC/C,GAAG;AAEHY,SAASI,WAAW,GAAG;AAEvB,wDAAeJ,gDAAAA,QAAQA,EAAAA,EAAC;;;ACZG;;;;;;;;;;;;;;;;;;;;;;;;ACAS;AAIU;AAEvC,MAAMM,oBAAoB,CAACC,SAAsD;IACtF,MAAM,EAAEC,IAAG,EAAEC,QAAO,EAAE,GAAGF;IACzB,IAAIC,KAAK;QACP,OAAO,CAAC,EAAEC,QAAQ,CAAC,EAAED,IAAI,CAAC;IAC5B,OAAO;QACL,OAAOC;IACT,CAAC;AACH,EAAE;AAEK,MAAMC,cAAoC,CAACtB,QAAU;IAC1D,MAAM,EAAEqB,QAAO,EAAED,IAAG,EAAEG,YAAW,EAAEC,kBAAiB,EAAE,GAAGC,qBAAqB,GAAGzB;IAEjF,MAAM0B,iBAAiBT,2BAAOA,CAAC,IAAM;QACnC,OAAOC,kBAAkB;YAAEG;YAASD;QAAI;IAC1C,GAAG;QAACC;QAASD;KAAI;IAEjB,OAAOI,kCACL;kBAAGE;uBAEH,iBAAC5B,4BAAUA;QAACU,SAAQ;QAAQe,aAAaA;QAAc,GAAGE,mBAAmB;kBAC1EC;MAEJ;AACH,EAAE;AAEF,8DAAeJ,WAAWA,EAAC;;;AC/Ba;AACV;AACN;;;;;;;;;;;;;;;;;;;;ACFY;AAE0B;AACI;AAMpC;AAMvB,MAAMU,+BAA+B,IAA0C;IACpF,MAAM,EAAEC,MAAMC,WAAU,EAAE,GAAGJ,0FAAgBA;IAC7C,MAAM,EAAEK,SAAQ,EAAE,GAAGN,sFAAkBA;IACvC,MAAMO,sBAAsBD,UAAUE;IAEtC,OAAOT,kDAAWA,CAChB,CAACT,SAAW;QACV,MAAM,EAAEmB,OAAM,EAAEC,oBAAmB,EAAE,GAAGpB;QAExC,OAAOY,gFAAkBA,CAAC;YAAEO;YAAQC;YAAqBH;YAAqBF;QAAW;IAC3F,GACA;QAACA;QAAYE;KAAoB;AAErC,EAAE;AAEF,iEAAeJ,4BAA4BA,EAAC","sources":["webpack:///./src/components/custom/Loader/Loader.tsx","webpack:///./src/components/custom/Loader/index.ts","webpack:///./src/components/templates/GridItem/GridItem.tsx","webpack:///./src/components/templates/GridItem/index.ts","webpack:///./src/components/views/AddressView/AddressView.tsx","webpack:///./src/components/views/AddressView/index.ts","webpack:///./src/helpers/useGetPriceInCurrentCurrency.ts"],"sourcesContent":["import { FC } from 'react';\n\nimport { CircularProgress, Grid } from '@mui/material';\nimport { Typography } from 'components/Typography';\n\nimport { LoaderProps } from './types';\n\nexport const Loader: FC<LoaderProps> = (props) => {\n  const { sx, message, size = 32 } = props;\n\n  return (\n    <Grid container flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\" sx={sx}>\n      {message && (\n        <Typography variant=\"subtitle2\" textAlign=\"center\" mb={2}>\n          {message}\n        </Typography>\n      )}\n      <CircularProgress size={size} />\n    </Grid>\n  );\n};\n","export * from './Loader';\n","import { forwardRef } from 'react';\n\nimport { Grid, GridProps } from '@mui/material';\n\nexport type GridItemProps = GridProps;\n\nexport const GridItem = forwardRef<HTMLDivElement, GridItemProps>((props, ref) => {\n  return <Grid ref={ref} item xs={12} {...props} />;\n});\n\nGridItem.displayName = 'GridItem';\n\nexport default GridItem;\n","export * from './GridItem';\n","import { FC, useMemo } from 'react';\n\nimport { AddressViewProps } from './types';\n\nimport { Typography } from '../../Typography';\n\nexport const getAddressWithZip = (params: { zip?: string; address: string }): string => {\n  const { zip, address } = params;\n  if (zip) {\n    return `${address} ${zip}`;\n  } else {\n    return address;\n  }\n};\n\nexport const AddressView: FC<AddressViewProps> = (props) => {\n  const { address, zip, withTooltip, withoutTypography, ...restTypographyProps } = props;\n\n  const addressWithZip = useMemo(() => {\n    return getAddressWithZip({ address, zip });\n  }, [address, zip]);\n\n  return withoutTypography ? (\n    <>{addressWithZip}</>\n  ) : (\n    <Typography variant=\"body1\" withTooltip={withTooltip} {...restTypographyProps}>\n      {addressWithZip}\n    </Typography>\n  );\n};\n\nexport default AddressView;\n","export { default } from './AddressView';\nexport * from './AddressView';\nexport * from './types';\n","import { useCallback } from 'react';\n\nimport { useCurrencyContext } from 'contexts/CurrencyContext';\nimport { useGetCurrencies } from 'hooks/queries/useGetCurrencies';\n\nimport {\n  getPriceInCurrency,\n  GetPriceInCurrencyParams,\n  GetPriceInCurrencyReturn,\n} from './getPriceInCurrency';\n\nexport type UseGetPriceInCurrentCurrencyReturn = (\n  params: Pick<GetPriceInCurrencyParams, 'amount' | 'initialCurrencyCode'>,\n) => GetPriceInCurrencyReturn;\n\nexport const useGetPriceInCurrentCurrency = (): UseGetPriceInCurrentCurrencyReturn => {\n  const { data: currencies } = useGetCurrencies();\n  const { currency } = useCurrencyContext();\n  const currentCurrencyCode = currency?.code;\n\n  return useCallback<UseGetPriceInCurrentCurrencyReturn>(\n    (params) => {\n      const { amount, initialCurrencyCode } = params;\n\n      return getPriceInCurrency({ amount, initialCurrencyCode, currentCurrencyCode, currencies });\n    },\n    [currencies, currentCurrencyCode],\n  );\n};\n\nexport default useGetPriceInCurrentCurrency;\n"],"names":["CircularProgress","Grid","Typography","Loader","props","sx","message","size","container","flexDirection","alignItems","justifyContent","variant","textAlign","mb","forwardRef","GridItem","ref","item","xs","displayName","useMemo","getAddressWithZip","params","zip","address","AddressView","withTooltip","withoutTypography","restTypographyProps","addressWithZip","default","useCallback","useCurrencyContext","useGetCurrencies","getPriceInCurrency","useGetPriceInCurrentCurrency","data","currencies","currency","currentCurrencyCode","code","amount","initialCurrencyCode"],"sourceRoot":""}