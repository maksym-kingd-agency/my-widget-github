{"version":3,"file":"612.js","mappings":";;;;;;;;;;;;;;;;;;;;;AAK+B;AAEc;AACuB;AACmB;AAahF,MAAMO,qBAAqB,CAChCC,QACG;IACH,MAAM,EAAEC,SAAQ,EAAE,GAAGC,MAAM,GAAGF;IAE9B;;;;GAIC,GACD,MAAM,EAAEG,MAAMC,oBAAoB,EAAE,GAAE,GAAGP,uFAAmBA;IAE5D,MAAMQ,uBAAuBD,mBAAmB,CAAC,EAAE,EAAEE;IAErD,MAAMC,gBAAgB;QACpB,CAACZ,wEAAWA,CAAC,EAAEU;IACjB;IAEA,qBACE,mDAACT,gEAAIA;QAACK,UAAUA;QAAUM,eAAeA;kBACvC,iEAACT,iFAAkBA;YAChB,GAAGI,IAAI;YACRM,gBAAgB;gBACdC,UAAUhB,8EAAiBA;gBAC3BiB,QAAQhB,+EAAkBA;gBAC1BiB,SAAS,IAAIC;YACf;YACAC,kBAAkB;gBAAEC,MAAMtB,gFAAmBA;YAAC;;;AAItD,EAAE;;;;;;;;;;;;;;;;;ACrDmC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACED;AACqC;AAGhC;AAC6B;AACzB;AAIF;AACM;AAkB1C,MAAMM,qBAAqB,CAChCE,QACG;IACH,MAAM,EAAEQ,eAAc,EAAEc,YAAW,EAAEC,MAAK,EAAEC,UAAS,EAAE,GAAGxB;IAE1D,MAAM,EAAEyB,cAAcC,aAAY,EAAE,GAAGH,SAAS,CAAC;IACjD,MAAM,EAAEE,cAAcE,kBAAiB,EAAE,GAAGH,aAAa,CAAC;IAE1D,MAAMI,sBAAsBX,gFAAyBA;IAErD,MAAMY,YAAYX,mEAAYA;IAE9B,qBACE,wDAACH,8CAAGA;QACFe,IAAI;YACFC,UAAU;YACVC,cAAc;YACdC,SAAS;YACTC,YAAY;YACZC,IAAI;YACJC,SAAS;gBAAEC,IAAI;gBAASC,IAAI;YAAO;YACnCC,gBAAgB;YAChBC,IAAI;gBAAEH,IAAI;gBAAGC,IAAI;YAAE;YACnBG,IAAI;QACN;;0BAEA,mDAACtB,gEAASA;gBACRL,MAAMnB,wEAAWA;gBACjB+C,OAAM;gBACNZ,IAAI;oBAAEa,UAAU;wBAAEN,IAAI;wBAAQC,IAAI;oBAAI;oBAAGM,IAAI;gBAAE;gBAC/CC,WAAW;;0BAGb,mDAACzB,kGAA0BA;gBACzBsB,OAAOb,UAAUiB,IAAI,CAAC;gBACtBhB,IAAI;oBAAEc,IAAI;oBAAGG,OAAO;wBAAEV,IAAI;wBAAQC,IAAI;oBAAI;gBAAE;gBAC3C,GAAG9B,cAAc;;0BAGpB,mDAACa,oEAAWA;gBACVP,MAAMtB,gFAAmBA;gBACzBkD,OAAOb,UAAUiB,IAAI,CAAC;gBACtBE,aAAanB,UAAUiB,IAAI,CAAC;gBAC5BG,yBAAW,mDAACjC,4DAAOA;oBAACkC,MAAK;;gBACzBC,OAAOvB;gBACPE,IAAI;oBAAEc,IAAI;oBAAGG,OAAO;wBAAEV,IAAI;wBAAQC,IAAI;oBAAI;gBAAE;;YAU7CZ,8BACC,mDAACA;gBACCI,IAAI;oBAAEa,UAAU;wBAAEN,IAAI;wBAAQC,IAAI;oBAAG;oBAAGc,IAAI;wBAAEf,IAAI;wBAAGC,IAAI;oBAAE;gBAAE;gBAC7De,MAAK;gBAEJ,GAAG/B,WAAW;gBACd,GAAGK,iBAAiB;;;;AAK/B,EAAE;;;;;;;;;;;;;;;;;ACjGmC","sources":["webpack:///./src/components/forms/SearchListingsForm/SearchListingsForm.tsx","webpack:///./src/components/forms/SearchListingsForm/index.ts","webpack:///./src/components/views/SearchListingsView/SearchListingsView.tsx","webpack:///./src/components/views/SearchListingsView/index.ts"],"sourcesContent":["import {\n  ACCOMMODATES_SOURCE,\n  CHECKIN_AT_SOURCE,\n  CHECKOUT_AT_SOURCE,\n  CITY_SOURCE,\n} from 'application/constants';\nimport { ButtonProps } from 'buttons/Button';\nimport { Form } from 'components/forms/Form';\nimport useGetPopularCities from 'hooks/queries/useGetPopularCities';\nimport { SearchListingsView, SearchListingsViewProps } from 'views/SearchListingsView';\n\nexport type SearchListingsFormValues = {\n  [CHECKIN_AT_SOURCE]: string;\n  [CHECKOUT_AT_SOURCE]: string;\n  [ACCOMMODATES_SOURCE]: string;\n  [CITY_SOURCE]?: string;\n};\n\nexport type SearchListingsFormProps<A> = Pick<SearchListingsViewProps<A>, 'slots' | 'slotProps'> & {\n  onSubmit: (values: SearchListingsFormValues) => void;\n};\n\nexport const SearchListingsForm = <A extends ButtonProps = ButtonProps>(\n  props: SearchListingsFormProps<A>,\n) => {\n  const { onSubmit, ...rest } = props;\n\n  /**\n   * We provide default city value\n   * The popular cities request was prefetched in `getServerSideProps`,\n   * so we get existing query data.\n   */\n  const { data: popularCitiesData = [] } = useGetPopularCities();\n\n  const firstPopularCitySlug = popularCitiesData?.[0]?.slug;\n\n  const defaultValues = {\n    [CITY_SOURCE]: firstPopularCitySlug,\n  };\n\n  return (\n    <Form onSubmit={onSubmit} defaultValues={defaultValues}>\n      <SearchListingsView\n        {...rest}\n        dateRangeProps={{\n          fromName: CHECKIN_AT_SOURCE,\n          toName: CHECKOUT_AT_SOURCE,\n          minDate: new Date(),\n        }}\n        selectInputProps={{ name: ACCOMMODATES_SOURCE }}\n      />\n    </Form>\n  );\n};\n","export * from './SearchListingsForm';\n","import { ComponentType, FC } from 'react';\n\nimport { Box } from '@mui/material';\nimport { ACCOMMODATES_SOURCE, CITY_SOURCE } from 'application/constants';\nimport { ButtonProps } from 'buttons/Button';\nimport { GuestSelectInputProps } from 'custom/GuestSelectInput/GuestSelectInput';\nimport { IcoMoon } from 'custom/IcoMoon';\nimport { useGetAccommodatesChoices, useTranslate } from 'hooks/index';\nimport { CityInput } from 'inputs/CityInput';\nimport {\n  SearchDateRangePickerInput,\n  SearchDateRangePickerInputProps,\n} from 'inputs/SearchDateRangePickerInput';\nimport { SelectField } from 'inputs/SelectField';\n\nexport interface SlotProps<A> {\n  actionButton: A;\n}\n\nexport type Slots<A> = {\n  [Key in keyof SlotProps<A>]?: ComponentType<NonNullable<SlotProps<A>[Key]>> | FC<A>;\n};\n\nexport interface SearchListingsViewProps<A> {\n  dateRangeProps: SearchDateRangePickerInputProps;\n  selectInputProps: GuestSelectInputProps;\n  buttonProps?: Partial<ButtonProps>;\n  slots: Slots<A>;\n  slotProps: SlotProps<A>;\n}\n\nexport const SearchListingsView = <A extends ButtonProps = ButtonProps>(\n  props: SearchListingsViewProps<A>,\n) => {\n  const { dateRangeProps, buttonProps, slots, slotProps } = props;\n\n  const { actionButton: ActionButton } = slots || {};\n  const { actionButton: actionButtonProps } = slotProps || {};\n\n  const accommodatesChoices = useGetAccommodatesChoices();\n\n  const translate = useTranslate();\n\n  return (\n    <Box\n      sx={{\n        maxWidth: 952,\n        borderRadius: 6,\n        bgcolor: 'background.default',\n        alignItems: 'center',\n        px: 3,\n        display: { xs: 'block', md: 'flex' },\n        justifyContent: 'space-between',\n        pt: { xs: 4, md: 3 },\n        pb: 1,\n      }}\n    >\n      <CityInput\n        name={CITY_SOURCE}\n        label=\"inputs.location\"\n        sx={{ minWidth: { xs: '100%', md: 215 }, mr: 3 }}\n        onlyPopular\n      />\n\n      <SearchDateRangePickerInput\n        label={translate.root('inputs.date_range')}\n        sx={{ mr: 3, width: { xs: '100%', md: 330 } }}\n        {...dateRangeProps}\n      />\n\n      <SelectField\n        name={ACCOMMODATES_SOURCE}\n        label={translate.root('inputs.guests')}\n        placeholder={translate.root('pages.search.placeholder.guest')}\n        startIcon={<IcoMoon icon=\"user\" />}\n        items={accommodatesChoices}\n        sx={{ mr: 3, width: { xs: '100%', md: 330 } }}\n      />\n      {/* TODO: The temporary solution according to PM decision, we will have GuestSelectInput later */}\n      {/* <GuestSelectInput\n        sx={{ mr: 3, width: isMobile ? '100%' : 330 }}\n        label=\"inputs.guests\"\n        view={isMobile ? 'modal' : 'dropDown'}\n        {...selectInputProps}\n      /> */}\n\n      {ActionButton && (\n        <ActionButton\n          sx={{ minWidth: { xs: '100%', md: 95 }, my: { xs: 3, md: 0 } }}\n          type=\"submit\"\n          // Default text\n          {...buttonProps}\n          {...actionButtonProps}\n        />\n      )}\n    </Box>\n  );\n};\n","export * from './SearchListingsView';\n"],"names":["ACCOMMODATES_SOURCE","CHECKIN_AT_SOURCE","CHECKOUT_AT_SOURCE","CITY_SOURCE","Form","useGetPopularCities","SearchListingsView","SearchListingsForm","props","onSubmit","rest","data","popularCitiesData","firstPopularCitySlug","slug","defaultValues","dateRangeProps","fromName","toName","minDate","Date","selectInputProps","name","Box","IcoMoon","useGetAccommodatesChoices","useTranslate","CityInput","SearchDateRangePickerInput","SelectField","buttonProps","slots","slotProps","actionButton","ActionButton","actionButtonProps","accommodatesChoices","translate","sx","maxWidth","borderRadius","bgcolor","alignItems","px","display","xs","md","justifyContent","pt","pb","label","minWidth","mr","onlyPopular","root","width","placeholder","startIcon","icon","items","my","type"],"sourceRoot":""}