{"version":3,"file":"634.js","mappings":"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","sources":["webpack:///./src/components/custom/Map/Map.tsx","webpack:///./src/components/custom/Map/MapPoint.tsx","webpack:///./src/components/custom/Map/MapWrapper.tsx","webpack:///./src/components/custom/Map/components/ZoomControl/ZoomControl.tsx","webpack:///./src/components/custom/Map/components/ZoomControl/index.ts","webpack:///./src/components/custom/Map/index.ts","webpack:///./src/components/custom/Map/mapStyles.ts","webpack:///./src/components/views/LabeledIconView/IconWithTitleView.tsx","webpack:///./src/components/views/LabeledIconView/index.ts","webpack:///./src/components/views/ZoomButton/ZoomButton.tsx","webpack:///./src/components/views/ZoomButton/index.ts","webpack:///./src/helpers/getLabelResource/getLabelResource.ts","webpack:///./src/providers/GoogleMapsAPIProvider.tsx"],"sourcesContent":["import { FC, ReactNode } from 'react';\n\nimport { Box, generateUtilityClasses, useTheme } from '@mui/material';\nimport { StyledRootProps } from '@packages/types';\nimport { GoogleMap, GoogleMapProps } from '@react-google-maps/api';\nimport { DEFAULT_MAP_ZOOM_VALUE } from 'application/constants';\nimport { styled } from 'theme';\n\nimport { ZoomControl } from './components/ZoomControl';\nimport { customMapStyle } from './mapStyles';\n\nexport const MIN_ZOOM_VALUE = 2;\n\nexport const WORLD_BORDER_BOUNDS = {\n  north: 85,\n  south: -85,\n  west: -180,\n  east: 180,\n};\n\nexport type Map = google.maps.Map;\nexport type LatLng = google.maps.LatLng;\nexport type LatLngLiteral = google.maps.LatLngLiteral;\nexport type LatLngBounds = google.maps.LatLngBounds;\nexport type BoundsLiteral = google.maps.LatLngBoundsLiteral;\nexport type ClustersBounds = GeoJSON.BBox;\nexport type Zoom = number;\n\nexport type MapProps = GoogleMapProps &\n  StyledRootProps & {\n    header?: ReactNode;\n  };\n\nconst PREFIX = 'Map';\n\nexport const MapClasses = generateUtilityClasses(PREFIX, ['map']);\n\nconst StyledRoot = styled(Box, {\n  name: `Styled${PREFIX}`,\n  label: `Sapiens--${PREFIX}`,\n})(() => ({\n  width: '100%',\n  height: '100%',\n  [`& .${MapClasses.map}`]: {\n    width: '100%',\n    height: '100%',\n    position: 'relative', // we have 'absolute' header inside\n  },\n}));\n\nexport const Map: FC<MapProps> = (props) => {\n  const { children, options = {}, sx, className, header = null, ...rest } = props;\n\n  const theme = useTheme();\n\n  return (\n    <StyledRoot sx={sx} className={className}>\n      <GoogleMap\n        mapContainerClassName={MapClasses.map}\n        options={{\n          fullscreenControl: false,\n          streetViewControl: false,\n          mapTypeControl: false,\n          disableDefaultUI: true,\n          restriction: {\n            latLngBounds: WORLD_BORDER_BOUNDS,\n            strictBounds: true,\n          },\n          /**\n           * We should remove our styles because they can conflict with\n           * user styles from google cloud that we get via the map id\n           */\n          styles: options.mapId ? undefined : customMapStyle,\n          minZoom: MIN_ZOOM_VALUE,\n          ...options,\n        }}\n        zoom={DEFAULT_MAP_ZOOM_VALUE}\n        {...rest}\n      >\n        {children}\n        <Box\n          sx={{\n            margin: theme.spacing(2),\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            right: 0,\n            display: 'flex',\n            flexWrap: 'wrap',\n            gap: 2,\n          }}\n        >\n          {header}\n          <ZoomControl\n            sx={{\n              marginLeft: 'auto',\n            }}\n          />\n        </Box>\n      </GoogleMap>\n    </StyledRoot>\n  );\n};\n","import { FC, ReactElement, useCallback, useMemo, useState } from 'react';\n\nimport { OverlayView, OverlayViewF, OverlayViewProps } from '@react-google-maps/api';\nimport { LatLngLiteral } from 'custom/Map';\nimport { get } from 'lodash';\n\nexport interface MapPointProps {\n  position: LatLngLiteral;\n  card: ReactElement;\n  point: ReactElement;\n  showCard: boolean;\n  infoBoxOverride?: ReactElement;\n}\n\ntype GetPixelPositionOffset = NonNullable<OverlayViewProps['getPixelPositionOffset']>;\n\nconst getMarkerPixelPositionOffset: GetPixelPositionOffset = (width, height) => {\n  return { x: -(width / 2), y: -(height / 2) };\n};\n\nexport const MapPoint: FC<MapPointProps> = (props) => {\n  const { position, card, point, showCard, infoBoxOverride } = props;\n\n  const [markerOverlay, setMarkerOverlay] = useState<google.maps.OverlayView>();\n\n  const getInfoBoxPixelPositionOffset = useCallback<GetPixelPositionOffset>(\n    (width) => {\n      const pointNode: HTMLElement | undefined = get(markerOverlay, 'container') as\n        | HTMLElement\n        | undefined; // are types wrong here? Avoid 'as' if possible\n      const pointHeight = pointNode?.offsetHeight;\n\n      return { x: -width / 2, y: pointHeight || 0 };\n    },\n    [markerOverlay],\n  );\n\n  const defaultInfoBox = useMemo(() => {\n    return (\n      <OverlayViewF\n        position={position}\n        mapPaneName={OverlayView.FLOAT_PANE}\n        getPixelPositionOffset={getInfoBoxPixelPositionOffset}\n      >\n        {card}\n      </OverlayViewF>\n    );\n  }, [getInfoBoxPixelPositionOffset, position, card]);\n\n  return (\n    <>\n      <OverlayViewF\n        position={position}\n        mapPaneName={OverlayView.OVERLAY_MOUSE_TARGET}\n        getPixelPositionOffset={getMarkerPixelPositionOffset}\n        onLoad={setMarkerOverlay}\n      >\n        {point}\n      </OverlayViewF>\n      {showCard && (infoBoxOverride || defaultInfoBox)}\n    </>\n  );\n};\n\nexport default MapPoint;\n","import { FC, ReactNode, useEffect } from 'react';\n\nimport { Box } from '@mui/material';\nimport { StyledRootProps } from '@packages/types';\nimport { Loader } from 'custom/Loader';\nimport { useSnackbar } from 'hooks/index';\nimport { useGoogleMapsAPI } from 'providers/GoogleMapsAPIProvider';\nimport { styled } from 'theme/index';\n\nconst PREFIX = 'MapWrapper';\n\nconst StyledRoot = styled(Box, {\n  name: `Styled${PREFIX}`,\n  label: `Sapiens--${PREFIX}`,\n})(() => ({\n  width: '100%',\n  height: '100%',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n}));\n\nexport interface MapWrapperProps extends StyledRootProps {\n  children: ReactNode;\n}\n\nexport const MapWrapper: FC<MapWrapperProps> = (props) => {\n  const { sx, className, children } = props;\n\n  const { isLoaded, error, isLoading } = useGoogleMapsAPI();\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  useEffect(() => {\n    if (error) {\n      enqueueSnackbar(error.message, { variant: 'error' });\n    }\n  }, [error, enqueueSnackbar]);\n\n  return (\n    <StyledRoot sx={sx} className={className}>\n      {isLoading && <Loader />}\n      {isLoaded && !error && children}\n    </StyledRoot>\n  );\n};\n","import { FC, useCallback, useEffect, useState } from 'react';\n\nimport { Box, generateUtilityClasses } from '@mui/material';\nimport { StyledRootProps } from '@packages/types';\nimport { useGoogleMap } from '@react-google-maps/api';\nimport clsx from 'clsx';\nimport { styled } from 'theme/index';\nimport { ZoomButton } from 'views/ZoomButton';\n\ntype ZoomControlProps = StyledRootProps;\n\nconst PREFIX = 'ZoomControl';\n\nexport const ZoomControlClasses = generateUtilityClasses(PREFIX, ['root']);\n\nconst StyledRoot = styled(Box, {\n  name: `Styled${PREFIX}`,\n  label: `Sapiens--${PREFIX}`,\n})(({ theme }) => {\n  return {\n    [`&.${ZoomControlClasses.root}`]: {\n      display: 'flex',\n      flexDirection: 'column',\n      gap: theme.spacing(1),\n    },\n  };\n});\n\nexport const ZoomControl: FC<ZoomControlProps> = (props) => {\n  const { className, sx } = props;\n  const map = useGoogleMap();\n\n  const [isMapReady, setIsMapReady] = useState(false);\n\n  /**\n   * We load zoom control only when all the tiles are loaded\n   */\n  useEffect(() => {\n    if (!map) return;\n\n    const listener = map.addListener('tilesloaded', () => {\n      setIsMapReady(true);\n    });\n\n    return () => {\n      listener.remove();\n    };\n  }, [map]);\n\n  const handleZoomIncrease = useCallback(() => {\n    if (!map) return;\n    const currentZoom = map.getZoom() || 0;\n    map.setZoom(currentZoom + 1);\n  }, [map]);\n\n  const handleZoomDecrease = useCallback(() => {\n    if (!map) return;\n    const currentZoom = map.getZoom() || 0;\n    map.setZoom(currentZoom - 1);\n  }, [map]);\n\n  if (!isMapReady) return null;\n\n  return (\n    <StyledRoot className={clsx(ZoomControlClasses.root, className)} sx={sx}>\n      <ZoomButton zoomType=\"increase\" onClick={handleZoomIncrease} />\n      <ZoomButton zoomType=\"decrease\" onClick={handleZoomDecrease} />\n    </StyledRoot>\n  );\n};\n","export * from './ZoomControl';\n","export * from './Map';\nexport * from './MapWrapper';\n","export const customMapStyle = [\n  {\n    featureType: 'administrative.province',\n    stylers: [\n      {\n        visibility: 'off',\n      },\n    ],\n  },\n  {\n    featureType: 'poi',\n    elementType: 'labels.text',\n    stylers: [\n      {\n        visibility: 'off',\n      },\n    ],\n  },\n  {\n    featureType: 'poi.business',\n    stylers: [\n      {\n        visibility: 'off',\n      },\n    ],\n  },\n  {\n    featureType: 'poi.government',\n    stylers: [\n      {\n        visibility: 'off',\n      },\n    ],\n  },\n  {\n    featureType: 'poi.medical',\n    stylers: [\n      {\n        visibility: 'off',\n      },\n    ],\n  },\n  {\n    featureType: 'poi.place_of_worship',\n    stylers: [\n      {\n        visibility: 'off',\n      },\n    ],\n  },\n  {\n    featureType: 'poi.school',\n    stylers: [\n      {\n        visibility: 'off',\n      },\n    ],\n  },\n  {\n    featureType: 'poi.sports_complex',\n    stylers: [\n      {\n        visibility: 'simplified',\n      },\n    ],\n  },\n  {\n    featureType: 'road.arterial',\n    elementType: 'labels',\n    stylers: [\n      {\n        visibility: 'off',\n      },\n    ],\n  },\n  {\n    featureType: 'road.highway',\n    stylers: [\n      {\n        visibility: 'off',\n      },\n    ],\n  },\n  {\n    featureType: 'road.highway',\n    elementType: 'labels',\n    stylers: [\n      {\n        visibility: 'off',\n      },\n    ],\n  },\n  {\n    featureType: 'road.local',\n    elementType: 'labels',\n    stylers: [\n      {\n        visibility: 'off',\n      },\n    ],\n  },\n  {\n    featureType: 'transit.line',\n    stylers: [\n      {\n        visibility: 'off',\n      },\n    ],\n  },\n  {\n    featureType: 'transit.station.bus',\n    stylers: [\n      {\n        visibility: 'off',\n      },\n    ],\n  },\n  {\n    featureType: 'transit.station.rail',\n    stylers: [\n      {\n        visibility: 'off',\n      },\n    ],\n  },\n];\n","import { FC, ReactNode } from 'react';\n\nimport { useTheme } from '@mui/material';\nimport { IcoMoon, IcoMoonProps } from 'custom/IcoMoon';\n\nimport { WithTitleTemplate } from '../../templates/WithTitleTemplate';\n\nexport interface IconWithTitleViewProps {\n  icon: IcoMoonProps['icon'];\n  title: ReactNode;\n  iconColor?: string;\n}\n\nexport const IconWithTitleView: FC<IconWithTitleViewProps> = (props) => {\n  const theme = useTheme();\n  const { icon, title, iconColor = theme.palette.text.primary } = props;\n\n  return (\n    <WithTitleTemplate title={title}>\n      <IcoMoon icon={icon} color={iconColor} />\n    </WithTitleTemplate>\n  );\n};\n","export * from './IconWithTitleView';\n","import { FC } from 'react';\n\nimport { Button, ButtonProps, useTheme } from '@mui/material';\nimport { IcoMoon } from 'custom/IcoMoon';\nimport { useTranslate } from 'hooks/index';\n\nexport interface ZoomButtonProps extends ButtonProps {\n  zoomType: 'increase' | 'decrease';\n}\n\nexport const ZoomButton: FC<ZoomButtonProps> = (props) => {\n  const { zoomType, sx, ...rest } = props;\n\n  const theme = useTheme();\n  const translate = useTranslate({ basePath: 'actions' });\n\n  const icon = zoomType === 'increase' ? 'add' : 'remove';\n\n  return (\n    <Button\n      variant=\"outlined\"\n      sx={{\n        zIndex: theme.zIndex.fab,\n        background: theme.palette.background.default,\n        padding: theme.spacing(1),\n        '&:hover': {\n          background: theme.palette.background.default,\n        },\n        width: 32,\n        height: 32,\n        minWidth: 32,\n        minHeight: 32,\n        [theme.breakpoints.up('md')]: {\n          width: 40,\n          height: 40,\n          minWidth: 40,\n          minHeight: 40,\n        },\n        ...sx,\n      }}\n      color=\"secondary\"\n      aria-label={translate(zoomType)}\n      {...rest}\n    >\n      <IcoMoon icon={icon} color=\"inherit\" />\n    </Button>\n  );\n};\n","export * from './ZoomButton';\n","import { Identifier } from '@packages/types';\nimport { ATTRIBUTES_RESOURCE } from 'application/resources';\n\nexport const getLabelResource = (attributeId: Identifier): string => {\n  return `${ATTRIBUTES_RESOURCE}/${attributeId}/filter-labels`;\n};\n","import { createContext, FC, ReactNode, useContext, useId, useMemo, useRef } from 'react';\n\nimport { useLoadScript } from '@react-google-maps/api';\nimport { useLocaleContext } from 'contexts/LocaleContext';\nimport { useGetWebsite } from 'hooks/index';\n\ninterface GoogleMapsAPIContextValue {\n  isLoaded: boolean;\n  isLoading: boolean;\n  error: Error | null;\n}\n\nconst GoogleMapsAPIContext = createContext<GoogleMapsAPIContextValue>({\n  isLoaded: false,\n  isLoading: false,\n  error: null,\n});\n\ntype UseLoadScriptOptions = Parameters<typeof useLoadScript>[0];\n\ninterface GoogleMapsAPIProviderProps extends Partial<Omit<UseLoadScriptOptions, 'id'>> {\n  children: ReactNode;\n}\n\nexport const GoogleMapsAPIProvider: FC<GoogleMapsAPIProviderProps> = (props) => {\n  const { children, ...scriptOptions } = props;\n\n  const id = useId();\n\n  const { locale } = useLocaleContext();\n\n  const { data: website } = useGetWebsite();\n\n  const googleMapsApiKey = website?.map_key || '';\n\n  /**\n   * These options can't be changed, otherwise\n   * we can get duplicated google maps api error.\n   * So, it's important that website must be prefetched\n   * in order to get the correct api key\n   */\n  const loadScriptOptionsRef = useRef<UseLoadScriptOptions>({\n    id,\n    googleMapsApiKey,\n    language: locale,\n    ...scriptOptions,\n  });\n\n  const { isLoaded, loadError } = useLoadScript(loadScriptOptionsRef.current);\n\n  const value = useMemo<GoogleMapsAPIContextValue>(\n    () => ({\n      isLoaded,\n      isLoading: !isLoaded && !loadError,\n      error: loadError ?? null,\n    }),\n    [isLoaded, loadError],\n  );\n\n  return <GoogleMapsAPIContext.Provider value={value}>{children}</GoogleMapsAPIContext.Provider>;\n};\n\nexport const useGoogleMapsAPI = () => useContext(GoogleMapsAPIContext);\n"],"names":["Box","generateUtilityClasses","useTheme","GoogleMap","DEFAULT_MAP_ZOOM_VALUE","styled","ZoomControl","customMapStyle","MIN_ZOOM_VALUE","WORLD_BORDER_BOUNDS","north","south","west","east","PREFIX","MapClasses","StyledRoot","name","label","width","height","map","position","Map","props","children","options","sx","className","header","rest","theme","mapContainerClassName","fullscreenControl","streetViewControl","mapTypeControl","disableDefaultUI","restriction","latLngBounds","strictBounds","styles","mapId","undefined","minZoom","zoom","margin","spacing","top","left","right","display","flexWrap","gap","marginLeft","useCallback","useMemo","useState","OverlayView","OverlayViewF","get","getMarkerPixelPositionOffset","x","y","MapPoint","card","point","showCard","infoBoxOverride","markerOverlay","setMarkerOverlay","getInfoBoxPixelPositionOffset","pointNode","pointHeight","offsetHeight","defaultInfoBox","mapPaneName","FLOAT_PANE","getPixelPositionOffset","OVERLAY_MOUSE_TARGET","onLoad","useEffect","Loader","useSnackbar","useGoogleMapsAPI","alignItems","justifyContent","MapWrapper","isLoaded","error","isLoading","enqueueSnackbar","message","variant","useGoogleMap","clsx","ZoomButton","ZoomControlClasses","root","flexDirection","isMapReady","setIsMapReady","listener","addListener","remove","handleZoomIncrease","currentZoom","getZoom","setZoom","handleZoomDecrease","zoomType","onClick","featureType","stylers","visibility","elementType","IcoMoon","WithTitleTemplate","IconWithTitleView","icon","title","iconColor","palette","text","primary","color","Button","useTranslate","translate","basePath","zIndex","fab","background","default","padding","minWidth","minHeight","breakpoints","up","aria-label","ATTRIBUTES_RESOURCE","getLabelResource","attributeId","createContext","useContext","useId","useRef","useLoadScript","useLocaleContext","useGetWebsite","GoogleMapsAPIContext","GoogleMapsAPIProvider","scriptOptions","id","locale","data","website","googleMapsApiKey","map_key","loadScriptOptionsRef","language","loadError","current","value","Provider"],"sourceRoot":""}