{"version":3,"file":"622.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAoD;AAa7B;AAEkB;AACX;AAEoC;AAa3D,MAAMW,YAAgC,CAACC,QAAU;IACtD,MAAM,EACJC,SAAQ,EACRC,MAAO,KAAK,GACZC,QAASN,oDAAIA,CAAA,EACbO,SAAUP,oDAAIA,CAAA,EACdQ,MAAK,EACLC,SAAQ,EACRC,QAAO,EACPC,WAAU,EACVC,QAAO,EACP,GAAGC,aACJ,GAAGV;IAEJF,wFAAmBA,CAAC;QAClBa,MAAMF;QACNP;QACAC;QACAC;IACF;IAEA,MAAMQ,yBAAyBxB,kDAAWA,CACxC,CAACyB,IAAkB;QACjBT,UAAUS,GAAG;IACf,GACA;QAACT;KAAQ;IAGX,MAAMU,UAAUN,aAAa,IAAI,CAAC;IAElC,qBACE,wDAAClB,iDAAMA;QAACY,MAAMA;QAAME,SAASA;QAASW,QAAO;QAAQP,YAAYA;QAAa,GAAGE,WAAW;;0BAC1F,wDAACjB,sDAAWA;gBAACuB,IAAI;oBAAEC,GAAGH;gBAAQ;;kCAC5B,wDAACzB,8CAAGA;;4BACDgB,uBAAS,mDAACV,qDAAUA;gCAACuB,SAAQ;0CAAMb;;4BAEnCC,0BAAY,mDAACX,qDAAUA;gCAACuB,SAAQ;0CAASZ;;;;kCAG5C,mDAACZ,qDAAUA;wBAACyB,SAASP;wBAAwBQ,MAAK;kCAChD,iEAACxB,4DAAOA;4BAACyB,MAAK;;;;;0BAIlB,mDAAC7B,wDAAaA;gBAACwB,IAAI;oBAAEC,GAAGH;gBAAQ;0BAAIb;;YACnC,CAAC,CAACM,yBAAW,mDAAChB,wDAAaA;gBAACyB,IAAI;oBAAEC,GAAGH;gBAAQ;0BAAIP;;;;AAGxD,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/EwC;AAEP;AAAA;AACK;AASjC,MAAMoB,cAAc,QAAQ;AAE5B,MAAM7B,sBAAsB,CAAC8B,SAAsC;IACxE,MAAM,EAAEjB,KAAI,EAAET,KAAI,EAAEC,OAAM,EAAEC,QAAO,EAAE,GAAGwB;IAExC,MAAMC,SAASH,qBAASA;IACxB,MAAMI,qBAAqBnB,OAAOa,aAAGA,CAACK,OAAOE,KAAK,EAAEJ,iBAAiBhB,OAAO,KAAK;IAEjF,MAAMqB,cAAcT,0BAAMA,CAACrB;IAC3B,MAAM+B,yBAAyBV,0BAAMA;IAErCD,6BAASA,CAAC,IAAM;QACd,IAAI,CAACX,QAAQsB,uBAAuBC,OAAO,KAAKJ,oBAAoB;QAEpEG,uBAAuBC,OAAO,GAAGJ;QAEjC,IAAIA,oBAAoB;YACtB3B;YACA;QACF,CAAC;QAEDC;IACF,GAAG;QAACO;QAAMmB;QAAoB1B;QAASD;KAAO;IAE9CmB,6BAASA,CAAC,IAAM;QACd,IAAI,CAACX,QAAQqB,YAAYE,OAAO,KAAKhC,MAAM;QAE3C8B,YAAYE,OAAO,GAAGhC;QAEtB,MAAM6B,QAAQ7B,OAAO;YAAE,GAAG2B,OAAOE,KAAK;YAAE,CAACJ,YAAY,EAAEhB;QAAK,IAAIc,cAAIA,CAACI,OAAOE,KAAK,EAAEJ,YAAY;QAE/FE,OAAOM,IAAI,CAAC;YAAEC,UAAUP,OAAOO,QAAQ;YAAEL;QAAM,GAAGM,WAAW;YAAEC,SAAS,IAAI;QAAC;IAC/E,GAAG;QAACpC;QAAMS;QAAMkB;KAAO;AACzB,EAAE;;;AC7CoC;;;;;;;;;;;;;;;ACAV","sources":["webpack:///./src/components/modals/ModalBase/ModalBase.tsx","webpack:///./src/components/modals/ModalBase/hooks/useSyncModalWithURL/useSyncModalWithURL.ts","webpack:///./src/components/modals/ModalBase/hooks/useSyncModalWithURL/index.ts","webpack:///./src/components/modals/ModalBase/index.ts"],"sourcesContent":["import { FC, MouseEvent, useCallback } from 'react';\n\nimport {\n  Box,\n  Dialog,\n  DialogActions,\n  DialogActionsProps,\n  DialogContent,\n  DialogProps,\n  DialogTitle,\n  DialogTitleProps,\n  IconButton,\n  Typography,\n} from '@mui/material';\nimport { WithRootProps } from '@packages/types';\nimport { IcoMoon } from 'custom/IcoMoon';\nimport { noop } from 'lodash';\n\nimport { useSyncModalWithURL } from './hooks/useSyncModalWithURL';\n\nexport type ModalBaseProps = WithRootProps<\n  Partial<DialogProps>,\n  {\n    title?: DialogTitleProps['children'];\n    subtitle?: string;\n    actions?: DialogActionsProps['children'];\n    urlName?: string;\n    onOpen?: () => void;\n  }\n>;\n\nexport const ModalBase: FC<ModalBaseProps> = (props) => {\n  const {\n    children,\n    open = false,\n    onOpen = noop,\n    onClose = noop,\n    title,\n    subtitle,\n    actions,\n    fullScreen,\n    urlName,\n    ...dialogProps\n  } = props;\n\n  useSyncModalWithURL({\n    name: urlName,\n    open,\n    onOpen,\n    onClose,\n  });\n\n  const handleCloseButtonClick = useCallback(\n    (e: MouseEvent) => {\n      onClose?.(e, 'escapeKeyDown');\n    },\n    [onClose],\n  );\n\n  const padding = fullScreen ? 2 : 3;\n\n  return (\n    <Dialog open={open} onClose={onClose} scroll=\"paper\" fullScreen={fullScreen} {...dialogProps}>\n      <DialogTitle sx={{ p: padding }}>\n        <Box>\n          {title && <Typography variant=\"h5\">{title}</Typography>}\n\n          {subtitle && <Typography variant=\"body1\">{subtitle}</Typography>}\n        </Box>\n\n        <IconButton onClick={handleCloseButtonClick} size=\"small\">\n          <IcoMoon icon=\"close\" />\n        </IconButton>\n      </DialogTitle>\n\n      <DialogContent sx={{ p: padding }}>{children}</DialogContent>\n      {!!actions && <DialogActions sx={{ p: padding }}>{actions}</DialogActions>}\n    </Dialog>\n  );\n};\n","import { useEffect, useRef } from 'react';\n\nimport { get, omit } from 'lodash';\nimport { useRouter } from 'next/router';\n\ninterface UseSyncModalWithURLParams {\n  name?: string;\n  open: boolean;\n  onOpen: () => void;\n  onClose: () => void;\n}\n\nexport const QUERY_PARAM = 'popup';\n\nexport const useSyncModalWithURL = (params: UseSyncModalWithURLParams) => {\n  const { name, open, onOpen, onClose } = params;\n\n  const router = useRouter();\n  const isModalNameInQuery = name ? get(router.query, QUERY_PARAM) === name : false;\n\n  const prevOpenRef = useRef(open);\n  const prevIsModalNameInQuery = useRef<boolean>();\n\n  useEffect(() => {\n    if (!name || prevIsModalNameInQuery.current === isModalNameInQuery) return;\n\n    prevIsModalNameInQuery.current = isModalNameInQuery;\n\n    if (isModalNameInQuery) {\n      onOpen();\n      return;\n    }\n\n    onClose();\n  }, [name, isModalNameInQuery, onClose, onOpen]);\n\n  useEffect(() => {\n    if (!name || prevOpenRef.current === open) return;\n\n    prevOpenRef.current = open;\n\n    const query = open ? { ...router.query, [QUERY_PARAM]: name } : omit(router.query, QUERY_PARAM);\n\n    router.push({ pathname: router.pathname, query }, undefined, { shallow: true });\n  }, [open, name, router]);\n};\n","export * from './useSyncModalWithURL';\n","export * from './ModalBase';\n"],"names":["useCallback","Box","Dialog","DialogActions","DialogContent","DialogTitle","IconButton","Typography","IcoMoon","noop","useSyncModalWithURL","ModalBase","props","children","open","onOpen","onClose","title","subtitle","actions","fullScreen","urlName","dialogProps","name","handleCloseButtonClick","e","padding","scroll","sx","p","variant","onClick","size","icon","useEffect","useRef","get","omit","useRouter","QUERY_PARAM","params","router","isModalNameInQuery","query","prevOpenRef","prevIsModalNameInQuery","current","push","pathname","undefined","shallow"],"sourceRoot":""}