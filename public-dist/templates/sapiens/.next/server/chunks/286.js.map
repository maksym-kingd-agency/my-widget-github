{"version":3,"file":"286.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAEgD;AACF;AAIX;AAE5B,MAAMA,OAAsB,CAACI,QAAU;IAC5C,MAAM,EAAEC,EAAC,EAAEC,SAAQ,EAAEC,KAAI,EAAE,GAAGC,MAAM,GAAGJ;IACvC,MAAM,EAAEC,GAAGI,UAAS,EAAE,GAAGP,yCAAcA;IAEvC,qBACE,iBAACD,cAAOA;QACNM,MAAMA;QACL,GAAGC,IAAI;QACRE,WACEH,OACIJ,uBAAQA,GACR,MAAM,iFAAiF,GAAlF;kBAGVE,IAAII,UAAUJ,KAAKC,QAAQ;;AAGlC,EAAE;AAEF,gDAAeN,IAAIA,EAAC;;;AC5Ba;AACV;AACC;;;;;;;;;;;;;;;;;;;;;;ACFW;AAE2B;AACnB;AAIpC,MAAMgB,iCAAmBJ,iDAAUA,CAAwC,CAACR,OAAOa,MAAQ;IAChG,MAAM,EAAEC,MAAK,EAAEZ,SAAQ,EAAEa,GAAE,EAAE,GAAGX,MAAM,GAAGJ;IACzC,MAAM,EAAEgB,UAAW,OAAM,EAAE,GAAGZ;IAE9B,MAAMC,YAAYM,mEAAYA,CAAC;QAAEM,UAAU;IAAe;IAE1D,qBACE,wDAACR,gDAAKA;QAAE,GAAGL,IAAI;QAAES,KAAKA;;0BACpB,mDAACH,qDAAUA;0BAAEI,SAAST,UAAU,CAAC,EAAEW,SAAS,CAAC,CAAC;;YAC7Cd;;;AAGP,GAAG;AAEHU,iBAAiBM,WAAW,GAAG;;;;;;;;;;;;;;;;;ACrBI","sources":["webpack:///./src/components/links/Link/Link.tsx","webpack:///./src/components/links/Link/index.ts","webpack:///./src/components/views/NotificationView/NotificationView.tsx","webpack:///./src/components/views/NotificationView/index.ts"],"sourcesContent":["import { FC } from 'react';\n\nimport { Link as MuiLink } from '@mui/material';\nimport { useTranslation } from 'next-i18next';\n\nimport { LinkProps } from './types';\n\nimport NextLink from '../NextLink';\n\nexport const Link: FC<LinkProps> = (props) => {\n  const { t, children, href, ...rest } = props;\n  const { t: translate } = useTranslation();\n\n  return (\n    <MuiLink\n      href={href}\n      {...rest}\n      component={\n        href\n          ? NextLink\n          : 'div' /* To not use link if href was not passed (NextLink does not expect 'undefined') */\n      }\n    >\n      {t ? translate(t) : children}\n    </MuiLink>\n  );\n};\n\nexport default Link;\n","export { default } from './Link';\nexport * from './Link';\nexport * from './types';\n","import { forwardRef } from 'react';\n\nimport { Alert, AlertProps, AlertTitle } from '@mui/material';\nimport { useTranslate } from 'hooks/index';\n\nexport type NotificationViewProps = AlertProps;\n\nexport const NotificationView = forwardRef<HTMLDivElement, NotificationViewProps>((props, ref) => {\n  const { title, children, sx, ...rest } = props;\n  const { severity = 'info' } = rest;\n\n  const translate = useTranslate({ basePath: 'notification' });\n\n  return (\n    <Alert {...rest} ref={ref}>\n      <AlertTitle>{title || translate(`${severity}!`)}</AlertTitle>\n      {children}\n    </Alert>\n  );\n});\n\nNotificationView.displayName = 'NotificationView';\n","export * from './NotificationView';\n"],"names":["Link","MuiLink","useTranslation","NextLink","props","t","children","href","rest","translate","component","default","forwardRef","Alert","AlertTitle","useTranslate","NotificationView","ref","title","sx","severity","basePath","displayName"],"sourceRoot":""}