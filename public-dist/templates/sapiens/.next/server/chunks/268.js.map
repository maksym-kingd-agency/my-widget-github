{"version":3,"file":"268.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAE4D;AAEpC;AACW;AACE;AAErC,MAAMK,SAASF,mDAAOA,CAAC,IAAM,oTAAO;;;;;;;AACpC,MAAMG,SAASH,mDAAOA,CAAC,IAAM,iOAAO;;;;;;;AAOpC,MAAMI,SAAS;AAER,MAAMC,oBAAoBP,qEAAsBA,CAACM,QAAQ;IAAC;IAAQ;CAAO,EAAE;AAElF,MAAME,mBAAmBL,6DAAMA,CAACJ,8CAAGA,EAAE;IACnCU,MAAM,CAAC,MAAM,EAAEH,OAAO,CAAC;IACvBI,OAAO,CAAC,SAAS,EAAEJ,OAAO,CAAC;AAC7B,GAAG,IAAO;QACR,CAAC,CAAC,EAAE,EAAEC,kBAAkBI,IAAI,CAAC,CAAC,CAAC,EAAE;YAC/BC,SAAS;YACTC,eAAe;YACfC,QAAQ;QACV;QAEA,CAAC,CAAC,GAAG,EAAEP,kBAAkBQ,IAAI,CAAC,CAAC,CAAC,EAAE;YAChCC,UAAU;QACZ;IACF;AAEO,MAAMC,aAAkC,CAACC,QAAU;IACxD,MAAM,EAAEC,SAAQ,EAAEC,GAAE,EAAEC,UAAS,EAAEC,sBAAS,mDAACjB,YAAS,EAAE,GAAGa;IAEzD,qBACE,wDAACV;QAAiBa,WAAWpB,gDAAIA,CAACM,kBAAkBI,IAAI,EAAEU;QAAYD,IAAIA;;0BACxE,mDAAChB;0BACD,mDAACW;gBAAKM,WAAWd,kBAAkBQ,IAAI;0BAAGI;;YACzCG;;;AAGP,EAAE;;;;;;;;;;;;;;;;;;AC7C2B;;;;;;;;;;;;;;;;;;;;;;;;;ACE0B;AACX;AACf;AACoB;AAEjD,MAAMK,gBAAgB;AAEf,MAAMC,kBAAoC,CAACV,QAAU;IAC1D,MAAM,EAAEW,MAAMC,YAAW,EAAE,GAAGN,oEAAaA;IAE3C,MAAMO,2BAA2BN,iDAAGA,CAACK,aAAa;IAClD,MAAME,aAAiCP,iDAAGA,CAACK,aAAa;IAExD,qBACE,mDAACJ,6CAAOA;QACNO,SAAS,CAACF;QACVG,oBAAoB;eACdF,aACA;gBACE;oBACEG,KAAK;oBACLC,MAAMb,+EAAkBA,CAAC;wBAAEc,KAAKL;wBAAYM,OAAOX;oBAAc;gBACnE;aACD,GACD,EAAE;SACP;QACA,GAAGT,KAAK;;AAGf,EAAE","sources":["webpack:///./src/components/layouts/MainLayout/MainLayout.tsx","webpack:///./src/components/layouts/MainLayout/index.ts","webpack:///./src/providers/NextSeoProvider.tsx"],"sourcesContent":["import { FC, ReactNode } from 'react';\n\nimport { Box, generateUtilityClasses } from '@mui/material';\nimport { StyledRootProps } from '@packages/types';\nimport clsx from 'clsx';\nimport dynamic from 'next/dynamic';\nimport { styled } from 'theme/index';\n\nconst Header = dynamic(() => import('../Header'));\nconst Footer = dynamic(() => import('../Footer'));\n\nexport type MainLayoutProps = StyledRootProps & {\n  children: ReactNode;\n  footer?: boolean | ReactNode;\n};\n\nconst PREFIX = 'MainLayout';\n\nexport const MainLayoutClasses = generateUtilityClasses(PREFIX, ['root', 'main']);\n\nconst StyledMainLayout = styled(Box, {\n  name: `Styled${PREFIX}`,\n  label: `Sapiens--${PREFIX}`,\n})(() => ({\n  [`&.${MainLayoutClasses.root}`]: {\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100vh',\n  },\n\n  [`& .${MainLayoutClasses.main}`]: {\n    flexGrow: 1,\n  },\n}));\n\nexport const MainLayout: FC<MainLayoutProps> = (props) => {\n  const { children, sx, className, footer = <Footer /> } = props;\n\n  return (\n    <StyledMainLayout className={clsx(MainLayoutClasses.root, className)} sx={sx}>\n      <Header />\n      <main className={MainLayoutClasses.main}>{children}</main>\n      {footer}\n    </StyledMainLayout>\n  );\n};\n","export * from './MainLayout';\n","import { FC } from 'react';\n\nimport { getUrlWithTemplate } from '@packages/helpers';\nimport { useGetWebsite } from 'hooks/index';\nimport get from 'lodash/get';\nimport { NextSeo, NextSeoProps } from 'next-seo';\n\nconst FAVICON_WIDTH = 64;\n\nexport const NextSeoProvider: FC<NextSeoProps> = (props) => {\n  const { data: websiteData } = useGetWebsite();\n\n  const isExposedToSearchEngines = get(websiteData, 'is_exposed_to_search_engines');\n  const favIconSrc: string | undefined = get(websiteData, 'fav_icon.src');\n\n  return (\n    <NextSeo\n      noindex={!isExposedToSearchEngines}\n      additionalLinkTags={[\n        ...(favIconSrc\n          ? [\n              {\n                rel: 'icon',\n                href: getUrlWithTemplate({ url: favIconSrc, width: FAVICON_WIDTH }),\n              },\n            ]\n          : []),\n      ]}\n      {...props}\n    />\n  );\n};\n"],"names":["Box","generateUtilityClasses","clsx","dynamic","styled","Header","Footer","PREFIX","MainLayoutClasses","StyledMainLayout","name","label","root","display","flexDirection","height","main","flexGrow","MainLayout","props","children","sx","className","footer","getUrlWithTemplate","useGetWebsite","get","NextSeo","FAVICON_WIDTH","NextSeoProvider","data","websiteData","isExposedToSearchEngines","favIconSrc","noindex","additionalLinkTags","rel","href","url","width"],"sourceRoot":""}